#!/usr/bin/env php
<?php

use Webman\Config;
use Warrior\Console\Command;
use Warrior\Console\Util;
use support\Container;

// 自动加载所有依赖
require_once __DIR__ . '/vendor/autoload.php';

// 如果传入的命令不是 start, restart, stop, status, reload, connections，则加载支持文件
if (!in_array($argv[1] ?? '', ['start', 'restart', 'stop', 'status', 'reload', 'connections'])) {
    require_once __DIR__ . '/support/bootstrap.php';
} else {
    // 如果 Support\App 类存在，加载所有路由配置
    if (class_exists('Support\App')) {
        Support\App::loadAllConfig(['route']);
    } else {
        // 否则重新加载路由和容器配置
        Config::reload(config_path(), ['route', 'container']);
    }
}

// 创建命令行对象
$cli = new Command();
// 设置命令行应用名称
$cli->setName('Warrior Cli');
// 安装 Webman 内部的命令
$cli->installInternalCommands();

// 自动安装应用目录中的命令
if (is_dir($command_path = Util::guessPath(app_path(), '/Console', true))) {
    $cli->installCommands($command_path);
}

// 遍历插件配置，安装每个插件中的命令
//foreach (config('plugin', []) as $firm => $projects) {
//    // 如果插件包含 'app' 配置，则尝试安装插件的命令
//    if (isset($projects['app'])) {
//        if ($command_str = Util::guessPath(base_path() . "/plugin/$firm", 'command')) {
//            $command_path = base_path() . "/plugin/$firm/$command_str";
//            // 安装插件命令
//            $cli->installCommands($command_path, "plugin\\$firm\\$command_str");
//        }
//    }
//
//    // 遍历项目，安装其中的命令
//    foreach ($projects as $name => $project) {
//        if (!is_array($project)) {
//            continue;
//        }
//        foreach ($project['command'] ?? [] as $command) {
//            // 通过容器获取并添加命令
//            $cli->add(Container::get($command));
//        }
//    }
//}

// 运行命令行应用
$cli->run();